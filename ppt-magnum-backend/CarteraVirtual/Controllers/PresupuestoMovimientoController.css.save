
using Microsoft.AspNetCore.Mvc;
using pdt.Models;
using pdt.Data;
using Microsoft.AspNetCore.Authorization; // Protege endpoints con JWT


namespace pdt.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class PresupuestoMovimientoController : ControllerBase
    {
        private readonly AppDbContext _context;
        private int GetUserId()
        {
            var userIdClaim = User.Claims.FirstOrDefault(c => c.Type == "UserId");
            return userIdClaim != null ? int.Parse(userIdClaim.Value) : 0;
        }
        public PresupuestoMovimientoController(AppDbContext context)
        {
            _context = context;
        }

        // GET: api/PresupuestoMovimientoController
        [HttpGet]
        public IActionResult GetAll()
        {
            // TODO: Implementar lógica para obtener todos los registros
            return Ok();
        }

        // Función que devuelve todos los Fondos Monetarios del usuario logueado
        [Authorize]
        [HttpGet]
        public IActionResult GetFondos()
        {
            int userId = GetUserId();

            var fondos = _context.FondosMonetarios
                        .Where(f => f.Propietario == userId)
                        .Select(f => new FondoMonetarioDto
                        {
                            Id = f.Id,
                            Nombre = f.Nombre,
                            Tipo = f.Tipo,
                            CapitalCOP = f.CapitalCOP,
                            CapitalUSD = f.CapitalUSD
                        })
                        .ToList();

            return Ok(fondos);
        }

        
        
        [Authorize]
        [HttpGet("tipos-gasto")]
        public IActionResult GetTiposGasto()
        {
            int userId = GetUserId();

            var tipos = _context.GastosTipos
                        .Where(t => t.Propietario == userId)
                        .Select(t => new GastoTipoDto
                        {
                            Id = t.Id,
                            Nombre = t.Nombre,
                            Presupuestocol = t.Presupuestocol,
                            Presupuestousd = t.Presupuestousd
                        })
                        .ToList();

            return Ok(tipos);
        }

            
        
        // GET: api/PresupuestoMovimientoController/5
        [HttpGet("{id}")]
        public IActionResult GetById(int id)
        {
            // TODO: Implementar lógica para obtener un registro por id
            return Ok();
        }

        // POST: api/PresupuestoMovimientoController
        [HttpPost]
        public IActionResult Create([FromBody] object model)
        {
            // TODO: Implementar lógica para crear un registro
            return CreatedAtAction(nameof(GetById), new { id = 0 }, model);
        }

        // PUT: api/PresupuestoMovimientoController/5
        [HttpPut("{id}")]
        public IActionResult Update(int id, [FromBody] object model)
        {
            // TODO: Implementar lógica para actualizar un registro
            return NoContent();
        }

        // DELETE: api/PresupuestoMovimientoController/5
        [HttpDelete("{id}")]
        public IActionResult Delete(int id)
        {
            // TODO: Implementar lógica para eliminar un registro
            return NoContent();
        }
    }
}
