// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pdt.Data;

#nullable disable

namespace CarteraVirtual.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250602153246_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pdt.Models.Deposito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FondoId");

                    b.ToTable("pdt_depositos", (string)null);
                });

            modelBuilder.Entity("pdt.Models.FondoMonetario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CapitalCOP")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("capitalCOP");

                    b.Property<decimal>("CapitalUSD")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("capitalUSD");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Propietario")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Propietario");

                    b.ToTable("pdt_fondos_monetarios", (string)null);
                });

            modelBuilder.Entity("pdt.Models.GastoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GastoRegistroId")
                        .HasColumnType("int");

                    b.Property<int>("GastoTipoId")
                        .HasColumnType("int")
                        .HasColumnName("TipoGasto");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GastoRegistroId");

                    b.HasIndex("GastoTipoId");

                    b.ToTable("pdt_gastos_detalle", (string)null);
                });

            modelBuilder.Entity("pdt.Models.GastoRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Criterio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FondoId")
                        .HasColumnType("int")
                        .HasColumnName("FondoMonetario");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Propietario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("propietario");

                    b.HasKey("Id");

                    b.HasIndex("FondoId");

                    b.ToTable("pdt_gastos", (string)null);
                });

            modelBuilder.Entity("pdt.Models.GastoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Presupuestocol")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("presupuesto_col");

                    b.Property<decimal>("Presupuestousd")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("presupuesto_usd");

                    b.Property<int>("Propietario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Propietario");

                    b.ToTable("pdt_crtr_gastos_tipo", (string)null);
                });

            modelBuilder.Entity("pdt.Models.PresupuestoMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GastoTipoId")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoPresupuestado")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GastoTipoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pdt_presupuesto", (string)null);
                });

            modelBuilder.Entity("pdt.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Grupo")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Grupo");

                    b.ToTable("pdt_users", (string)null);
                });

            modelBuilder.Entity("pdt.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permisos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("pdt_users_groups", (string)null);
                });

            modelBuilder.Entity("pdt.Models.Deposito", b =>
                {
                    b.HasOne("pdt.Models.FondoMonetario", "Fondo")
                        .WithMany()
                        .HasForeignKey("FondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fondo");
                });

            modelBuilder.Entity("pdt.Models.FondoMonetario", b =>
                {
                    b.HasOne("pdt.Models.User", "PropietarioNavigation")
                        .WithMany("FondosMonetarios")
                        .HasForeignKey("Propietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropietarioNavigation");
                });

            modelBuilder.Entity("pdt.Models.GastoDetalle", b =>
                {
                    b.HasOne("pdt.Models.GastoRegistro", "GastoRegistro")
                        .WithMany("Detalles")
                        .HasForeignKey("GastoRegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pdt.Models.GastoTipo", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("GastoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GastoRegistro");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("pdt.Models.GastoRegistro", b =>
                {
                    b.HasOne("pdt.Models.FondoMonetario", "Fondo")
                        .WithMany()
                        .HasForeignKey("FondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fondo");
                });

            modelBuilder.Entity("pdt.Models.GastoTipo", b =>
                {
                    b.HasOne("pdt.Models.User", "PropietarioNavigation")
                        .WithMany("GastosTipos")
                        .HasForeignKey("Propietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropietarioNavigation");
                });

            modelBuilder.Entity("pdt.Models.PresupuestoMovimiento", b =>
                {
                    b.HasOne("pdt.Models.GastoTipo", "GastoTipo")
                        .WithMany()
                        .HasForeignKey("GastoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pdt.Models.User", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GastoTipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("pdt.Models.User", b =>
                {
                    b.HasOne("pdt.Models.UserGroup", "GrupoNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Grupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoNavigation");
                });

            modelBuilder.Entity("pdt.Models.GastoRegistro", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("pdt.Models.User", b =>
                {
                    b.Navigation("FondosMonetarios");

                    b.Navigation("GastosTipos");
                });

            modelBuilder.Entity("pdt.Models.UserGroup", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
